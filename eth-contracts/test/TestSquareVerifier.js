// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require("Verifier");

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
const {
  proof: { A, A_p, B, B_p, C, C_p, H, K },
  input
} = require("./proof.json");

// Test verification with incorrect proof

contract("Test Square Verifier", async accounts => {
  var verifier;
  before("setup contract", async () => {
    verifier = await Verifier.new();
  });

  it(`verify with correct proof`, async () => {
    console.log(A, A_p, B, B_p, C, C_p, H, K, input);
    const v = await verifier.verifyTx.call(A, A_p, B, B_p, C, C_p, H, K, input);
    //console.log(v);
    //assert.equal(v, false, "Failed verify true.");
  });

  it(`verify with correct proof`, async () => {
    const cmod = [C[0], C[1].slice(0, -5) + "00000"];
    const v = await verifier.verifyTx.call(
      A,
      A_p,
      B,
      B_p,
      cmod,
      C_p,
      H,
      K,
      input
    );
    //console.log(v);
    //assert.equal(v, true, "Failed verify false.");
  });
});
